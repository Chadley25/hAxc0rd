module.exports = {
    name: "nikto",
    category: "exploit",
    description: "",
    run: async (client, message, args) => {
        const { exec } = require('child_process');
        const Discord = require('discord.js');
        const arguments = message.toString().slice((message.content).substr(0,message.content.indexOf(' ')).length + 1);
        
        if (args[0] == "help") {
            // displays information about Nikto
            const helpEmbed = new Discord.MessageEmbed()
                .setColor('#f01d0e')
                .setTitle('Nikto - Help')
                .addField('Description', "Nikto is a web server scanner which performs comprehensive tests against web servers for multiple items, including dangerous files/programs, checks for outdated versions, and version spefic problems.")
                .addField('Arguments', "[-host] ~ specifies the target host")
                .addField('Examples', 'nikto -host 127.0.0.1\nnikto -host chadley25.github.io')
                .addField('More Information', 'https://github.com/sullo/nikto')    
            message.channel.send(helpEmbed);
        } else { // executes the "nikto" command locally and displays the output live
            var child = exec(`nikto ${arguments}`, {detached: true});
            message.channel.send("*Note: If you want to stop this tool before it completes, just enter one of the following keywords into this channel: `STOP` `EXIT` `QUIT`*");

            const filter = m => (m.content.includes("STOP") || m.content.includes("EXIT") || m.content.includes("QUIT")) && m.author == message.author;
            // starts a collector to check if the user wants to stop the tool's process
            const collector = message.channel.createMessageCollector(filter, { time: 1000000 });
            collector.on('collect', () => {
                // kills the process through its PID; just killing the process through child.kill() does not work properly
                exec(`kill -9 ${child.pid}`);
                exec(`kill -9 ${child.pid + 1}`)
            });

            // when data is gathered, prints it out
            child.stdout.on('data', (data) => {
                if (data.length > 2000) {
                    let command = client.commands.get("seperateMessage");
                    command.run(message, data);
                } else {
                    message.channel.send(data);
                }
            });
            
            // when data is gathered, prints it out
            child.stderr.on('data', (data) => {
                message.channel.send(data);
            });

            // when the child process is closed, displays to the user that it was
            child.on('close', () => {
                message.channel.send(`The Nikto command executed by <@${message.author.id}> finished/was stopped.`);
                collector.stop();
            });
        }
    }
}