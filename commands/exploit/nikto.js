module.exports = {
    name: "nikto",
    category: "exploit",
    description: "",
    run: async (client, message, args) => {
        const { exec } = require('child_process');
        const Discord = require('discord.js');
        let arguments = message.toString().slice((message.content).substr(0,message.content.indexOf(' ')).length + 1);
        
        if (args[0] == "help") {
            // displays information about the tool being used
            const richembed = new Discord.RichEmbed()
                .setColor('#f01d0e')
                .setTitle('Nikto - Help')
                .addField('Description', "Nikto is a free software command-line vulnerability scanner that scans webservers for dangerous files/CGIs, outdated server software and other problems.")
                .addField('Arguments', "[-H] ~ displays the help menu for Nikto")
                .addField('More Information', 'https://github.com/sullo/nikto')    
            message.channel.send(richembed);
        } else {
            // executes the "nikto" command on the local system that the bot is hosted on
            // along with any arguments entered using the child_process API
            var child = require('child_process').exec(`nikto ${arguments}`, {detached: true});

            const filter = m => m.content.includes("STOP") || m.content.includes("EXIT") || m.content.includes("QUIT");
            const collector = message.channel.createMessageCollector(filter, { time: 20000 });

            collector.on('collect', m => {
                if (m.content.includes("STOP") || m.content.includes("EXIT") || m.content.includes("QUIT")) {
                    exec(`kill -9 ${child.pid}`);
                    exec(`kill -9 ${child.pid + 1}`)
                }
            });

            // use event hooks to provide a callback to execute when data are available: 
            child.stdout.on('data', function(data) {
                if (data.length > 2000) {
                    let command = client.commands.get("seperateMessage");
                    command.run(message, data);
                } else {
                    message.channel.send(data);
                }
            });
            
            child.stderr.on('data', function(data) {
                //child.kill('SIGINT');
                message.channel.send(data);
            });

            child.on('close', function() {
                message.channel.send("The Gobuster command executed by <@" + message.author.id + "> finished/was stopped.");
                collector.stop();
            });
        }
    }
}